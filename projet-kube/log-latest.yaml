#Kibana dashboard localhost:9440 kubectl port-forward --namespace kube-logging service/kibana 9440:5601
#check elasticsearch localhost:9999 kubectl port-forward --namespace kube-logging service/elasticsearch 9999:9200
---

apiVersion: v1
kind: Namespace
metadata:
 name: kube-logging
 
---

kind: Service
apiVersion: v1
metadata:
 name: elasticsearch
 namespace: kube-logging
 labels:
   app: elasticsearch
spec:
 selector:
   app: elasticsearch
 clusterIP: None
 ports:
   - port: 9200
     name: rest
     targetPort: 9200
   - port: 9300
     name: inter-node
     targetPort: 9300

     
     
     
---

apiVersion: v1
kind: PersistentVolume
metadata:
  name: data-es-cluster-0
  namespace: kube-logging
spec:
  accessModes:
  - ReadWriteOnce
  capacity:
    storage: 1Gi
  local:
    path: /run/desktop/mnt/host/c/projet-kube/storage
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - docker-desktop
  persistentVolumeReclaimPolicy: Retain
  storageClassName: local-storage

# ---
  
 # apiVersion: v1
# kind: PersistentVolume
# metadata:
  # name: data-es-cluster-1
  # namespace: kube-logging
# spec:
  # accessModes:
  # - ReadWriteOnce
  # capacity:
    # storage: 1Gi
  # local:
    # path: /run/desktop/mnt/host/c/projet-kube/storage
  # nodeAffinity:
    # required:
      # nodeSelectorTerms:
      # - matchExpressions:
        # - key: kubernetes.io/hostname
          # operator: In
          # values:
          # - docker-desktop
  # persistentVolumeReclaimPolicy: Retain
  # storageClassName: local-storage
  
# ---

  # apiVersion: v1
# kind: PersistentVolume
# metadata:
  # name: data-es-cluster-2
  # namespace: kube-logging
# spec:
  # accessModes:
  # - ReadWriteOnce
  # capacity:
    # storage: 1Gi
  # local:
    # path: /run/desktop/mnt/host/c/projet-kube/storage
  # nodeAffinity:
    # required:
      # nodeSelectorTerms:
      # - matchExpressions:
        # - key: kubernetes.io/hostname
          # operator: In
          # values:
          # - docker-desktop
  # persistentVolumeReclaimPolicy: Retain
  # storageClassName: local-storage
  


# ---
# apiVersion: v1
# kind: ConfigMap
# metadata:
  # name: elastic-config
  # namespace: kube-logging
# data:
  # elasticsearch.yml: |
    # ---
    # cluster.name: "docker-cluster"
    # network.host: 0.0.0.0
    # node.data: true
    




---

apiVersion: apps/v1
kind: StatefulSet
metadata:
 name: es-cluster
 namespace: kube-logging
spec:
 serviceName: elasticsearch
 replicas: 1 #3 
 selector:
   matchLabels:
     app: elasticsearch
 template:
   metadata:
     labels:
       app: elasticsearch
   spec:
     # volumes:   # je crois 
     # - name: elastic-config-volume   # que le
       # configMap:   # temps 
         # name: elastic-config   # s'est arreter
     containers:
     - name: elasticsearch
       image: docker.elastic.co/elasticsearch/elasticsearch:7.2.0
       resources:
           limits:
             cpu: 1000m
           requests:
             cpu: 100m
       ports:
       - containerPort: 9200
         name: rest
         protocol: TCP
       - containerPort: 9300
         name: inter-node
         protocol: TCP
       volumeMounts:
       - name: data
         mountPath: /usr/share/elasticsearch/data
       # - name: elastic-config-volume   #tentative numero: 9460029
         # mountPath: /usr/share/elasticsearch/config   #tentative numero: 9460029
       env:
         - name: node.data
           value: 'true'
         - name: cluster.name
           value: k8s-logs
         - name: node.name
           valueFrom:
             fieldRef:
               fieldPath: metadata.name
         - name: discovery.seed_hosts
           value: "es-cluster-0.elasticsearch,es-cluster-1.elasticsearch,es-cluster-2.elasticsearch"
         - name: cluster.initial_master_nodes
           value: "es-cluster-0,es-cluster-1,es-cluster-2"
         - name: ES_JAVA_OPTS
           value: "-Xms512m -Xmx512m"
     initContainers:
     - name: fix-permissions
       image: busybox
       command: ["sh", "-c", "chown -R 1000:1000 /usr/share/elasticsearch/data"]
       securityContext:
         privileged: true
       volumeMounts:
       - name: data
         mountPath: /usr/share/elasticsearch/data
     - name: increase-vm-max-map
       image: busybox
       command: ["sysctl", "-w", "vm.max_map_count=262144"]
       securityContext:
         privileged: true
     - name: increase-fd-ulimit
       image: busybox
       command: ["sh", "-c", "ulimit -n 65536"]
       securityContext:
         privileged: true
 volumeClaimTemplates:
 - metadata:
     name: data
     labels:
       app: elasticsearch
   spec:
     accessModes: [ "ReadWriteOnce" ]
     storageClassName: local-storage
     resources:
       requests:
         storage: 1Gi

---


apiVersion: v1
kind: Service
metadata:
 name: kibana
 namespace: kube-logging
 labels:
   app: kibana
spec:
 ports:
 - port: 5601
 selector:
   app: kibana

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: kibana-config
  namespace: kube-logging
data:
  kibana.yml: |
    ---
    server.name: kibana
    server.host: "0.0.0.0"
    server.basePath: "/api/v1/proxy/namespaces/kibana/services/kibana-logging"
    elasticsearch.hosts: http://elasticsearch.kube-logging.svc.cluster.local:9200
    elasticsearch.ssl.verificationMode: none
    status.allowAnonymous: true
    
---

apiVersion: apps/v1
kind: Deployment
metadata:
 name: kibana
 namespace: kube-logging
 labels:
   app: kibana
spec:
 replicas: 1
 selector:
   matchLabels:
     app: kibana
 template:
   metadata:
     labels:
       app: kibana
   spec:
     volumes:
     - name: kibana-config-volume
       configMap:
         name: kibana-config
     containers:
     - name: kibana
       image: docker.elastic.co/kibana/kibana-oss:7.2.0
       volumeMounts:
       - name: kibana-config-volume
         mountPath: /usr/share/kibana/config 
       resources:
         limits:
           cpu: 1000m
         requests:
           cpu: 100m
       # env: #marche pas
         # - name: ELASTICSEARCH_HOSTS #marche toujours pas
           # value: http://elasticsearch.kube-logging.svc.cluster.local:9200 #marche pas et ne cours pas non plus
       ports:
       - containerPort: 5601
       
    
---

apiVersion: v1
kind: ServiceAccount
metadata:
 name: fluentd
 namespace: kube-logging
 labels:
   app: fluentd

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
 name: fluentd
 namespace: kube-logging
 labels:
   app: fluentd
rules:
- apiGroups: [""]
  resources:
  - pods
  - namespaces
  verbs: ["get", "list", "watch"]
  
---

kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
 name: fluentd
 namespace: kube-logging
roleRef:
  kind: ClusterRole
  name: fluentd
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: fluentd
  namespace: kube-logging
 


---

apiVersion: apps/v1
kind: DaemonSet
metadata:
 name: fluentd
 namespace: kube-logging
 labels:
   app: fluentd
spec:
 selector:
   matchLabels:
     app: fluentd
 template:
   metadata:
     labels:
       app: fluentd
   spec:
     serviceAccount: fluentd
     serviceAccountName: fluentd
     tolerations:
     - key: node-role.kubernetes.io/master
       effect: NoSchedule
     containers:
     - name: fluentd
       image: fluent/fluentd-kubernetes-daemonset:v1.4.2-debian-elasticsearch-1.1
       env:
         - name:  FLUENT_ELASTICSEARCH_HOST
           value: "elasticsearch.kube-logging.svc.cluster.local"
         - name:  FLUENT_ELASTICSEARCH_PORT
           value: "9200"
         - name: FLUENT_ELASTICSEARCH_SCHEME
           value: "http"
         - name: FLUENTD_SYSTEMD_CONF
           value: disable
       resources:
         limits:
           memory: 512Mi
         requests:
           cpu: 100m
           memory: 200Mi
       volumeMounts:
       - name: varlog
         mountPath: /var/log
       - name: varlibdockercontainers
         mountPath: /var/lib/docker/containers
         readOnly: true
     terminationGracePeriodSeconds: 30
     volumes:
     - name: varlog
       hostPath:
         path: /var/log
     - name: varlibdockercontainers
       hostPath:
         path: /var/lib/docker/containers
         
---